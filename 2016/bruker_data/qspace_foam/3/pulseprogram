# 1 "/opt/topspin3.2/exp/stan/nmr/lists/pp/user/sse_cpmg_Daq_2.eh"
; cpmg_Daq_1.eh
; imcti1d  
; constant time imaging

; new version for DRU using digtal mode 23.10.08 KLZ
; modified CPMG direct acquisition 04.03.15 EH

; AQ_mod : qsim
; DSPFIRM : smooth
; DIGTYP  : DRU
; DIGMOD  : baseopt-solids, digital
# 1 "/opt/topspin3.2/exp/stan/nmr/lists/pp/Avance.incl" 1
;Avance3.incl
;   for AV III
;
;avance-version (07/12/14)
;
;$CLASS=HighRes Incl
;$COMMENT=


# 165 "/opt/topspin3.2/exp/stan/nmr/lists/pp/Avance.incl"
;$Id: Avance3.incl,v 1.9.8.1 2012/01/31 17:56:17 ber Exp $
# 14 "/opt/topspin3.2/exp/stan/nmr/lists/pp/user/sse_cpmg_Daq_2.eh" 2

;#include <Avancesolids.incl>
# 1 "/opt/topspin3.2/exp/stan/nmr/lists/pp/De.incl" 1
;De2.incl
;   for AVi
;
;avance-version (08/02/15)
;
;$CLASS=HighRes Incl
;$COMMENT=

# 10 "/opt/topspin3.2/exp/stan/nmr/lists/pp/De.incl"
define delay rde1


"rde1=de-de1"
# 24 "/opt/topspin3.2/exp/stan/nmr/lists/pp/De.incl"
;for multi receive


# 33 "/opt/topspin3.2/exp/stan/nmr/lists/pp/De.incl"
;$Id: De2.incl,v 1.7.8.1 2012/01/31 17:56:17 ber Exp $
# 16 "/opt/topspin3.2/exp/stan/nmr/lists/pp/user/sse_cpmg_Daq_2.eh" 2


define list<delay>  vd_list=<$VDLIST>
# 20 "/opt/topspin3.2/exp/stan/nmr/lists/pp/user/sse_cpmg_Daq_2.eh"
define loopcounter totalpoints
define loopcounter restpoints

define delay acquire
define delay acqRest

define delay tau1
define delay tau2
define delay tau3
# 30 "/opt/topspin3.2/exp/stan/nmr/lists/pp/user/sse_cpmg_Daq_2.eh"
define delay echo1
define delay echo2
define delay echo3
define delay echo4


"d14=depa+0.5u"
"d13=d3-d14"           ; compensate1 after p1
# 39 "/opt/topspin3.2/exp/stan/nmr/lists/pp/user/sse_cpmg_Daq_2.eh"
"totalpoints = (2*l12*l13)"
"restpoints=(td-totalpoints)" 

"acqRest=(td-totalpoints)*dw" 
"acquire=(2*l12)*dw"

"tau1 = d2-p1/2-1u-4u-p2/2"
"tau2 = d2-acquire/2-d14-d13-p2/2"
"tau3 = d2-acquire/2-1u-1u-4u-p2/2"
# 49 "/opt/topspin3.2/exp/stan/nmr/lists/pp/user/sse_cpmg_Daq_2.eh"
"echo1 = d2-p2/2"
"echo2 = d2-1u-4u-d14-d13-acquire/2-p2/2"
"echo3 = d2-1u-1u-4u-acquire/2-p2/2"
"echo4 = echo2"

"acqt0=0"
"anavpt=1024"
       
dwellmode explicit 

# 1 "mc_line 61 file /opt/topspin3.2/exp/stan/nmr/lists/pp/user/sse_cpmg_Daq_2.eh dc-measurement inserted automatically"

    dccorr
# 61 "/opt/topspin3.2/exp/stan/nmr/lists/pp/user/sse_cpmg_Daq_2.eh"
# 61 "/opt/topspin3.2/exp/stan/nmr/lists/pp/user/sse_cpmg_Daq_2.eh"
ze							            ; initialize

start,	1m
        (rde1 sync de1 adc ph31 syrec) (1u 1u ph30:r):f1 (de)	 	; start receiving, takes DE
start1, d1       

        1u          setrtp1^5   
      	4u	        sytra             ; ohne sytra geht nix      
# 70 "/opt/topspin3.2/exp/stan/nmr/lists/pp/user/sse_cpmg_Daq_2.eh"
        (p1  ph1):f1

        vd_list
        (p1 ph2):f1

        d20
        (p1 ph3):f1
        vd_list 
	echo1
        (p2 ph4):f1                  ; 180 pulse, receiver blanking
	echo2
start3, 1u            
      	4u	                    ; ohne sytra geht nix    
        d14         syrec              ; depa+0.5u
     	d13         setrtp1|5      
	acquire          setrtp1|0		; digitize l12 data pairs
     	1u          setrtp1^0		; 
        echo3
        1u          setrtp1^5
        4u          sytra
        (p2 ph4):f1                  ; 180 pulse, receiver blanking
	echo4
      	lo to start3 times l13 ; loop for number of echoes
	5u
   	acqRest         setrtp1|0		; digitize restpoints data pairs
   	1u              setrtp1^0
        10u             ipp1 ipp2 ipp3 ipp4 ipp31
        rcycnp=start
# 99 "/opt/topspin3.2/exp/stan/nmr/lists/pp/user/sse_cpmg_Daq_2.eh"
        10m wr #0 if #0 zd
        10m vd_list.inc
        lo to start times td1 
exit


ph0=0
ph1=0 2 0 2  0 2 0 2  1 3 1 3   1 3 1 3
ph2=0 0 2 2
ph3=0 0 0 0  2 2 2 2
ph4=1 1 1 1  1 1 1 1  0 0 0 0   0 0 0 0
ph30=0
ph31=2 0 0 2 0 2 2 0  1 3 3 1  3 1 1 3
# 113 "/opt/topspin3.2/exp/stan/nmr/lists/pp/user/sse_cpmg_Daq_2.eh"
;p1: 90 degree pulse
;p2  180 degree pulse
;d2: tau1, echo = 2*tau1
;l12: number of pts acquired in each echo
;l13: number of echoe in CPMG sequence
;acquire: (2*l12)*dw, acquisition time in each echo
;acqRest: (td-totalpoints)*dw, mop up of acq time after echoes
;totalpoints: 2*l12*l13, number of points acquired for l13 echoes < td
;restpoints: (td-totalpoints), points remaining after l13 echoes > 0

;tau1: d2-p1/2-1u-4u-p2/2, adjusted tau value
;tau2: d2-acquire/2-d14-d13-p2/2, adjusted tau value before signal acquired
;tau3: d2-acquire/2-1u-1u-4u-p2/2, adjusted tau value after signal acquired
